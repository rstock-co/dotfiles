#----------------#
# i3 CONFIG FILE #
#----------------#

# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Mod4 = Windows Key
set $mod Mod4

# List of all single character aliases currently already used:
# [a, d, f, g, h, j, k, l, m, p, r, s, t, v, z] PLUS --> [space, return, ;]

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:DroidSans Mono Nerd Font 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+q kill

#-------------------------------
# STARTING PROGRAMS WITH HOTKEYS
#
# https://i3wm.org/docs/userguide.html#keybindings
#-------------------------------

# start a terminal (Enter)
bindsym $mod+Return exec alacritty

# start Google Chrome (g)
bindsym $mod+g exec --no-startup-id google-chrome-stable

# start Zoom (z)
bindsym $mod+z exec --no-startup-id zoom

# start Discord (d)
bindsym $mod+d exec --no-startup-id discord

# start GitKraken (k)
bindsym $mod+k exec --no-startup-id gitkraken

# start dmenu (a program launcher)
bindsym $mod+m exec --no-startup-id i3-dmenu-desktop
# bindsym $mod+m exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -nf '#C0FFFF' -nb '#0080C0' -sb '#005577' -sf '#C0FFC0' -fn 'monospace-12' -p 'MENU'"

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

#-----------------------------------------
# STARTING PROGRAMS ON SPECIFIC WORKSPACES
#
# https://i3wm.org/docs/userguide.html#assign_workspace
#-----------------------------------------

# NOTE: use the `xprop` command and then click on the window of the program 
# you wish to bind to see its class => ex: (WM_CLASS(STRING) = "<instance> <class>")

# Assign Zoom to workspace 1 (always want it on the screen with webcam)
assign [class="zoom"] $ws1

# Assign GitKraken to workspace 3 
assign [class="GitKraken"] $ws3

# Assign Discord to workspace 6
assign [class="discord"] $ws6

#----------------------------------------------------
# BINDING WORKSPACES TO SPECIFIC MONITORS
#
# https://i3wm.org/docs/userguide.html#workspace_screen
# https://www.reddit.com/r/i3wm/comments/4oq6cr/binding_workspace_to_monitor/
#----------------------------------------------------

set $monitor_one "HDMI-1"
set $monitor_two "HDMI-2"
set $monitor_three "HDMI-3"

# Monitor 1
workspace $ws1 output $monitor_one
workspace $ws4 output $monitor_one
workspace $ws7 output $monitor_one

# Monitor 2
workspace $ws2 output $monitor_two
workspace $ws5 output $monitor_two
workspace $ws8 output $monitor_two

# Monitor 3
workspace $ws3 output $monitor_three
workspace $ws6 output $monitor_three
workspace $ws9 output $monitor_three

#----------------------
# WINDOW BORDERS & GAPS
#
# https://i3wm.org/docs/userguide.html#default_border
#----------------------

default_border none

hide_edge_borders smart

# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Only enable outer gaps when there is exactly one container
smart_gaps inverse_outer

# Examples
gaps inner 4
#gaps outer current plus 5
#gaps horizontal current plus 40
#gaps outer current toggle 60


#------------
# NAVIGATION
#------------

# change focus
# bindsym $mod+j focus left
# bindsym $mod+k focus down
# bindsym $mod+l focus up
# bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+p layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
# https://unix.stackexchange.com/questions/566566/binding-numpad-keys-on-i3-dont-work

bindsym mod2+KP_1 workspace $ws1
bindsym mod2+KP_2 workspace $ws2
bindsym mod2+KP_3 workspace $ws3
bindsym mod2+KP_4 workspace $ws4
bindsym mod2+KP_5 workspace $ws5
bindsym mod2+KP_6 workspace $ws6
bindsym mod2+KP_7 workspace $ws7
bindsym mod2+KP_8 workspace $ws8
bindsym mod2+KP_9 workspace $ws9

# move focused container to workspace
bindsym $mod+mod2+KP_1 move container to workspace number $ws1
bindsym $mod+mod2+KP_2 move container to workspace number $ws2
bindsym $mod+mod2+KP_3 move container to workspace number $ws3
bindsym $mod+mod2+KP_4 move container to workspace number $ws4
bindsym $mod+mod2+KP_5 move container to workspace number $ws5
bindsym $mod+mod2+KP_6 move container to workspace number $ws6
bindsym $mod+mod2+KP_7 move container to workspace number $ws7
bindsym $mod+mod2+KP_8 move container to workspace number $ws8
bindsym $mod+mod2+KP_9 move container to workspace number $ws9

# ----------------------------------------------------
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command python3 /usr/lib/python3.10/site-packages/powerline/bindings/i3/powerline-i3.py
    font pango:Hacker 11
}

# -----
# GAPS
#
# https://github.com/Airblader/i3/wiki/Example-Configuration
# -----

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

